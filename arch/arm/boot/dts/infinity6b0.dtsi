/*
* infinity6b0.dtsi- Sigmastar
*
* Copyright (c) [2019~2020] SigmaStar Technology.
*
*
* This software is licensed under the terms of the GNU General Public
* License version 2, as published by the Free Software Foundation, and
* may be copied, distributed, and modified under those terms.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License version 2 for more details.
*
*/

#include <../../../../drivers/sstar/include/infinity6b0/irqs.h>
#include <../../../../drivers/sstar/include/infinity6b0/gpio.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/interrupt-controller/arm-gic.h>
#include "skeleton.dtsi"
#include <../../../../include/generated/autoconf.h>
#ifdef CONFIG_CAM_CLK
#include <../../../../drivers/sstar/include/infinity6b0/camclk.h>
#endif

/ {
        camclk: camclkinit {
            compatible = "camdriver,camclkinit";
            status = "ok";
        };        
        camclk {
            compatible = "camdriver,camclk";
            status = "ok";
        };
        camclkut {
            compatible = "camdriver,camclkut";
            status = "ok";
        };
    cpus {
        #address-cells = <1>;
        #size-cells = <0>;

        cpu@0 {
            device_type = "cpu";
            compatible = "arm,cortex-a7";
#ifndef CONFIG_CAM_CLK
            clocks = <&CLK_cpupll_clk>;
#endif
            reg = <0x0>;
            operating-points = <
                /* kHz     uV */
                1200000  1000000
                1100000  1000000
                1000000  1000000
                800000   900000
                600000   900000
                400000   900000
            >;
        };
    };

    aliases {
        console = &uart0;
        serial0 = &uart0;
        serial1 = &uart1;
        serial2 = &fuart;
    };

    soc {
        compatible = "simple-bus";
        interrupt-parent = <&ms_main_intc>;
        #address-cells = <1>;
        #size-cells = <1>;
        ranges;

        gic: gic@16000000 {
            compatible = "arm,cortex-a7-gic";
            #interrupt-cells = <3>;
            #address-cells = <1>;
            #size-cells = <1>;
            interrupt-controller;
            interrupt-parent = <&gic>;
            reg = <0x16001000 0x1000>,
                  <0x16002000 0x1000>;
        };

        ms_main_intc: ms_main_intc {
            compatible = "sstar,main-intc";
            #interrupt-cells = <3>;
            #address-cells = <1>;
            #size-cells = <1>;
            interrupt-parent=<&gic>;
            interrupt-controller;
        };

        ms_pm_intc: ms_pm_intc {
            compatible = "sstar,pm-intc";
            #interrupt-cells = <1>;
            interrupt-parent=<&ms_main_intc>;
            interrupt-controller;
            interrupts = <GIC_SPI INT_IRQ_PM_SLEEP IRQ_TYPE_LEVEL_HIGH>;
        };

        ms_gpi_intc: ms_gpi_intc {
            compatible = "sstar,gpi-intc";
            #interrupt-cells = <1>;
            interrupt-parent=<&ms_main_intc>;
            interrupt-controller;
            interrupts = <GIC_SPI INT_IRQ_GPI_OUT IRQ_TYPE_LEVEL_HIGH>;
        };

        arch_timer {
            compatible = "arm,cortex-a7-timer", "arm,armv7-timer";
            interrupt-parent=<&gic>;
            interrupts = <GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
                         <GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
                         <GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
                         <GIC_PPI 10 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>;
            clock-frequency = <6000000>;
        };

        pmu {
            compatible = "arm,cortex-a7-pmu";
            interrupt-parent=<&gic>;
            interrupts = <GIC_SPI 10 IRQ_TYPE_LEVEL_HIGH>,
                         <GIC_SPI 16 IRQ_TYPE_LEVEL_HIGH>,
                         <GIC_SPI 22 IRQ_TYPE_LEVEL_HIGH>,
                         <GIC_SPI 28 IRQ_TYPE_LEVEL_HIGH>;
        };

        clks: clocks{
            #address-cells = <1>;
            #size-cells = <1>;
            ranges;
        };
/*
        timer_clockevent: timer@1F006040 {
            compatible = "sstar,piu-clockevent";
            reg = <0x1F006040 0x100>;
            interrupts=<GIC_SPI INT_FIQ_TIMER_0 IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_xtali_12m>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_xtali_12m >;
#else
            clocks = <&CLK_xtali_12m>;
#endif
            status = "ok";
        };
*/
#ifndef __DTS_DUALOS__
        venc {
            compatible = "sstar,venc";
            reg = <0x1F345200 0x800>, <0x1F2C5200 0x100>, <0x1F203C00 0x100>, <0x1F207800 0x100>;
            reg-names = "vpu-bit", "venc-brige", "hw-uart0", "hw-uart1";
            interrupts = <GIC_SPI INT_IRQ_MHE IRQ_TYPE_LEVEL_HIGH>;
            interrupt-parent = <&ms_main_intc>;
            interrupt-names = "mhe-irq";
//            clocks = <&CLK_vhe>, <&CLK_vhe_vpu>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_vhe CAMCLK_vhe_vpu >;
#else
            clocks = <&CLK_vhe>, <&CLK_vhe_vpu>;
#endif
            clock-names = "CKG_venc";
            status = "ok";
        };

        vpe: vpe {
            compatible = "sigmastar,vpe";
            //reg = <0x1F000000 0x100>;
            //clk,chiptop,hvsp0,sc0,dnr,ldc
//            clocks = <&CLK_fclk1>,<&CLK_fclk2>,<&CLK_odclk>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_fclk1 CAMCLK_fclk2 CAMCLK_odclk >;
#else
            clocks = <&CLK_fclk1>,<&CLK_fclk2>,<&CLK_odclk>;
#endif
            clock-names = "CLK_fclk1","CLK_fclk2","CLK_odclk";
            status = "ok";
            DigitalZoom-Dropmode = <1>;
            interrupts = <GIC_SPI INT_IRQ_SC_TOP IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_SC1_TOP_INT IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_SC2_TOP_INT IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
        };

        vip: vip {
            compatible = "sstar,vip";
            status = "ok";
            CMDQ-mode = <1>;
            //reg = <0x1F224000 0x200>;
        };

        pnl: pnl {
            compatible = "sigmastar,pnl";
            status = "ok";
            ttl-mode = <1>;
            jtag-mode = <0>;
            //Reg = <0x1F224000 0x200>;
        };

        disp: disp {
            compatible = "sigmastar,disp";
            status = "ok";
            //Reg = <0x1F224000 0x200>;
            interrupts = <GIC_SPI INT_IRQ_SC_TOP IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_SC1_TOP_INT IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_SC2_TOP_INT IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
        };
        isp: isp {
            compatible = "isp";
            io_phy_addr = <0x1f000000>;
            banks = <0x1302>;
            interrupts = <GIC_SPI INT_IRQ_ISP IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_isp>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_isp >;
#else
            clocks = <&CLK_isp>;
#endif
            status = "ok";
            clock-frequency-index = <5>;
            //clk-pad = <PAD_SR_IO17>;
            //clk-pad = <PAD_SPI0_CK>; //be compatible with the previous QFN, so it must reserved 4 pins for SPI0 pads
            //isp-flag = <0>;
        };
        csi: csi {
            compatible = "sstar,csi";
            io_phy_addr = <0x1f000000>;
            banks = <0x1202>,<0x1203>,<0x1204>,<0x1038>,<0x101e>;
            interrupts = <GIC_SPI INT_IRQ_MIPI_CSI2 IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        vif: vif {
            compatible = "sstar,vif";
            status = "ok";
            reg = <0x1F260800 0x600>, <0x0 0x0>, <0x0 0x0>, <0x0 0x0>, <0x0 0x0>, <0x0 0x0>, <0x1F207800 0x200>, <0x1F226600 0x200>, <0x1F207000 0x200>, <0x1F000000 0x400000>, <0x1F203C00 0x200>;
//            clocks = <&CLK_sr_mclk>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_sr_mclk >;
#else
            clocks = <&CLK_sr_mclk>;
#endif
            interrupts = <GIC_SPI INT_IRQ_VIF IRQ_TYPE_LEVEL_HIGH>,<GIC_SPI INT_IRQ_ISP IRQ_TYPE_LEVEL_HIGH>;
        };

        ispalgo: ispalgo {
            compatible = "sstar,ispalgo";
            status = "ok";
        };

        ispscl: ispscl {
            compatible = "sstar,ispscl";
            status = "ok";
        };

        ispmid: ispmid {
            compatible = "sstar,ispmid";
            status = "ok";
        };

        sensorif: sensorif {
            compatible = "sstar,sensorif";
            status = "ok";
            sensorif_grp0_i2c = <1>;
        };

        jpe0: jpe@0x1F2C4000 {
            compatible = "sstar,cedric-jpe";
            reg = <0x1F2C4000 0x100>;
            interrupts = <GIC_SPI INT_IRQ_JPE IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_jpe>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_jpe >;
#else
            clocks = <&CLK_jpe>;
#endif
            clock-names = "CKG_jpe";
            clk-select = <0>; // 0: 288MHz  1: 216MHz  2: 54MHz  3: 27MHz
            status = "ok";
        };

        gop{
            compatible = "sigmastar,gop";
//            clocks = <&CLK_gop0>,<&CLK_fclk1>,<&CLK_dip>;
#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_gop0 CAMCLK_fclk1 CAMCLK_dip>;
#else
            clocks = <&CLK_gop0>,<&CLK_fclk1>,<&CLK_dip>;
#endif
            status = "ok";
        };

        gop1{
            compatible = "sstar,infinity-gop1";
//            clocks = <&CLK_gop1>,<&CLK_fclk1>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_gop1 CAMCLK_fclk1 >;
#else
            clocks = <&CLK_gop1>,<&CLK_fclk1>;
#endif
            status = "ok";
        };

        gop2{
            compatible = "sstar,infinity-gop2";
//            clocks = <&CLK_gop2>,<&CLK_fclk2>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_gop2 CAMCLK_fclk2 >;
#else
            clocks = <&CLK_gop2>,<&CLK_fclk2>;
#endif
            status = "ok";
        };

        cmdq0 {
            compatible = "sstar,cmdq0";
//            clocks = <&CLK_mcu>; //for timeout tick
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_mcu >;
#else
            clocks = <&CLK_mcu>; //for timeout tick
#endif
            interrupts=<GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        cmdq1 {
            compatible = "sstar,cmdq1";
//            clocks = <&CLK_mcu>; //for timeout tick
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_mcu >;
#else
            clocks = <&CLK_mcu>; //for timeout tick
#endif
            interrupts=<GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        cmdq2 {
            compatible = "sstar,cmdq2";
//            clocks = <&CLK_mcu>; //for timeout tick
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_mcu >;
#else
            clocks = <&CLK_mcu>; //for timeout tick
#endif
            interrupts=<GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        cmdq3 {
            compatible = "sstar,cmdq3";
//            clocks = <&CLK_mcu>; //for timeout tick
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_mcu >;
#else
            clocks = <&CLK_mcu>; //for timeout tick
#endif
            interrupts=<GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };


        dip {
            compatible = "sstar,dip";
//            clocks = <&CLK_dip>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_dip >;
#else
            clocks = <&CLK_dip>;
#endif
            interrupts=<GIC_SPI INT_IRQ_DIP0 IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };
#endif

        ive0: ive@0x1F2A4000 {
            compatible = "sstar,infinity-ive";
            reg = <0x1F2A4000 0x100>,<0x1F2A4200 0x100>;
            interrupts = <GIC_SPI INT_IRQ_IVE_INT IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_ive>,<&CLK_miu_ive>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_ive CAMCLK_miu_ive >;
#else
            clocks = <&CLK_ive>,<&CLK_miu_ive>;
#endif
            status = "ok";
        };
        
        uart0: uart0@1F221000 {
            compatible = "sstar,uart";
            reg = <0x1F221000 0x100>;
            interrupts = <GIC_SPI INT_IRQ_UART_0 IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_uart0>;
            status = "ok";
#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_uart0>;
#else
            clocks = <&CLK_uart0>;
#endif
        };
        uart1: uart1@1F221200 {
            compatible = "sstar,uart";
            reg = <0x1F221200 0x100>;
            interrupts = <GIC_SPI INT_IRQ_UART_1 IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_uart1>;
            pad = <PAD_UART1_TX>;
            //pad = <PAD_FUART_RTS>;
            //pad = <PAD_GPIO6>;
            status = "ok";
#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_uart1>;
#else
            clocks = <&CLK_uart1>;
#endif
        };
        fuart: uart2@1F220400 {
            compatible = "sstar,uart";
            reg = <0x1F220400 0x100>, <0x1F220600 0x100>;
            interrupts = <GIC_SPI INT_IRQ_FUART IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_URDMA IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_fuart>;
            dma = <1>;
            pad = <PAD_UART0_TX>;
            //pad = <PAD_FUART_CTS>; //fuart mode1
            //pad = <PAD_GPIO15>;    //fuart mode3
            //pad = <PAD_FUART_RX>;  //fuart mode5
            status = "ok";
#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_fuart>;
#else
            clocks = <&CLK_fuart>;
#endif
        };

        emac0: emac0 {
            compatible = "sstar-emac";
            interrupts = <GIC_SPI INT_IRQ_EMAC IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_FIQ_LAN_ESD IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_emac_ahb>,<&CLK_emac_tx>,<&CLK_emac_rx>; //for MII & RMII
#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_emac_ahb CAMCLK_emac_tx CAMCLK_emac_rx>;
#else
            clocks = <&CLK_emac_ahb>,<&CLK_emac_tx>,<&CLK_emac_rx>; //for MII & RMII
#endif
            reg = <0x1F2A2000 0x800>, <0x1F343C00 0x600>, <0x1F006200 0x600>; //for MII
            //reg = <0x1F2A2000 0x800>, <0x1F343C00 0x600>, <0 0>; // for RMII
			pad = <0x1F203DD4 0x0100 0x0100>;
            phy-handle = <&phy0>;
            status = "ok";
            mdio-bus {
                phy0: ethernet-phy@0 {
                    phy-mode = "mii"; //for MII
                    //phy-mode = "rmii";//for RMII
                };
            };
        };

        flashisp {
            compatible = "mtd-flashisp";
//            clocks = <&CLK_bdma>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_bdma >;
#else
            clocks = <&CLK_bdma>;
#endif
            quadread = <0>;
            status = "ok";
        };
/*
        nandflash {
            compatible = "ms-nand";
//            clocks = <&CLK_VOID>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_VOID >;
#else
            clocks = <&CLK_VOID>;
#endif
            interrupts =  <GIC_SPI INT_IRQ_FCIE IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

		emmc {
            compatible = "sstar_mci";
//            clocks = <&CLK_VOID>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_VOID >;
#else
            clocks = <&CLK_VOID>;
#endif
            interrupts =  <GIC_SPI INT_IRQ_FCIE IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };
*/
        spinandflash {
            compatible = "ms-spinand";
//            clocks =<&CLK_bdma>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_bdma >;
#else
            clocks =<&CLK_bdma>;
#endif
            status = "ok";
        };

        Sstar-ehci-1 {
            compatible = "Sstar-ehci-1";
//            clocks = <&CLK_utmi>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_utmi >;
#else
            clocks = <&CLK_utmi>;
#endif
            interrupts = <GIC_SPI INT_IRQ_UHC IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        Sstar-udc {
            compatible = "sstar,infinity-udc";
            interrupts = <GIC_SPI INT_IRQ_OTG IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        spi0@0{
            compatible = "sstar,mspi";
            mspi-group = <0>;
            #ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_mspi0>,<CAMCLK_mspi>;
            #else
            clocks = <&CLK_mspi0>,<&CLK_mspi>;
            #endif
            reg = <0x1F222000 0x200>;
            interrupts = <GIC_SPI INT_IRQ_MSPI_0 IRQ_TYPE_LEVEL_HIGH>;
            use-dma = <1>;
            pad-ctrl = <PAD_SPI0_CZ>;
            status = "disabled";
        };

        spi1@1{
            compatible = "sstar,mspi";
            mspi-group = <1>;
            #ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_mspi1>,<CAMCLK_mspi>;
            #else
            clocks = <&CLK_mspi1>,<&CLK_mspi>;
            #endif
            reg = <0x1F222200 0x200>;
            interrupts = <GIC_SPI INT_IRQ_MSPI_1 IRQ_TYPE_LEVEL_HIGH>;
            use-dma = <0>;
            //pad-ctrl = <PAD_GPIO0>;
            status = "disabled";
        };

        i2c0@0{
            compatible = "sstar,i2c";
            reg = <0x1F223000 0x200>,<0x1F203c00 0x200>,<0x1F207000 0x200>;
                #address-cells = <1>;
                #size-cells = <0>;
//            clocks = <&CLK_miic0>;
#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_miic0>;
#else
            clocks = <&CLK_miic0>;
#endif
            i2c-group = <0>;
            status = "ok";
            /*
             * padmux: 1 -> PAD_I2C0_SCL, PAD_I2C0_SDA
             *         2 -> PAD_PWM0, PAD_PWM1
             *         3 -> PAD_SR_IO00, PAD_SR_IO01
            */
            i2c-padmux = <1>;
        };

        i2c1@1{
            compatible = "sstar,i2c";
            reg = <0x1F223200 0x200>,<0x1F203c00 0x200>,<0x1F207000 0x200>;
                #address-cells = <1>;
                #size-cells = <0>;
//            clocks = <&CLK_miic1>;
#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_miic1>;
#else
            clocks = <&CLK_miic1>;
#endif
            i2c-group = <1>;
            /*
             * padmux: 1 -> PAD_I2C1_SCL, PAD_I2C1_SDA
             *         2 -> PAD_PWM0, PAD_PWM1
             *         3 -> PAD_SR_IO00, PAD_SR_IO01
            */
            i2c-padmux = <1>;
            status = "ok";
//            24c512@54 {
//                compatible = "sstar,24c512";
//                reg = <0x54>;
//            };
        };


        gpio:gpio{
            compatible = "sstar,gpio";
        };

        sound {
            compatible = "sstar,audio";
//            reg = <0x1F000000 0x1000000>;
            interrupts=<GIC_SPI INT_IRQ_BACH IRQ_TYPE_LEVEL_HIGH>;
            playback-volume-level=<64>;    //0~94
            capture-volume-level=<64>;
           // micin-pregain-level=<1>;    //0~3
            micin-pregain-level=<0>;    //0~3
            micin-gain-level=<3>;    //0~7
            linein-gain-level=<2>;  //0~7
            amp-gpio = <PAD_FUART_TX  1>; // QFN88: PAD_FUART_TX  QFN128: PAD_PM_GPIO0 
//            clocks = <&CLK_upll_384m>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_upll_384m >;
#else
            clocks = <&CLK_upll_384m>;
#endif

            /*
            0: OFF
            1: PAD_GPIO4 ~ PAD_GPIO6 (QFN128)
            2: PAD_SD1_IO4 ~ PAD_SD1_IO6
            3: PAD_SD1_IO8, PAD_UART0_RX, PAD_UART0_TX
            */
            digmic-padmux = <1>;

            /*
            0: OFF
            1: PAD_GPIO0 ~ PAD_GPIO3 (QFN128)
            2: PAD_SD1_IO0 ~ PAD_SD1_IO3
            3: PAD_SPI1_CZ, PAD_SPI1_CK, PAD_SPI1_DI, PAD_SPI1_DO
            */
            i2s-padmux = <1>;

            keep-i2s-clk = <0>;
            status = "ok";
        };
        
        emmc {
            compatible = "sstar_mci";
#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_sd>; // IP_SD:<CAMCLK_sd> IP_SDIO:<CAMCLK_sdio>
#else
		        clocks =<&CLK_sd>; // IP_SD:<&CLK_sd> IP_SDIO:<&CLK_sdio>
#endif
            ip-select = <0>; // 0:IP_SD 1:IP_SDIO
            pad-select = <0>; // 0:PAD_SD 1:PAD_SD1
            interrupts =  <GIC_SPI INT_IRQ_FCIE IRQ_TYPE_LEVEL_HIGH>;
            bus-width = <4>;
            max-clks = <2>; // 0:48M 1:43M 2:40M 3:36M 4:32M 5:20M 6:12M 7:300K
            clk-driving = <0>;
            cmd-driving = <0>;
            data-driving = <0>;
            status = "ok";
        };

        sdmmc {
            compatible = "sstar,sdmmc";

            slotnum = <1>;
            revcdz = <0>;

            slot-ip-orders = <0>,<1>,<2>; // 0:IP_SD 1:IP_SDIO
            slot-pad-orders = <0>,<1>,<2>; // 0:PAD_SD 1:PAD_SD1
            slot-max-clks = <48000000>,<48000000>,<48000000>;
            slot-intcdzs = <1>,<1>,<1>;
            slot-fakecdzs = <0>,<0>,<0>;
            slot-cdzs-gpios = <PAD_PM_SD_CDZ>,<PAD_SD1_IO6>,<0>;
            slot-pwr-gpios = <PAD_FUART_RTS>,<PAD_PM_GPIO9>,<0>;
            slot-pwr-off-delay = <30>,<30>,<30>;
            slot-pwr-on-delay = <1>,<1>,<1>;
            slot-sdio-use = <0>,<0>,<0>;
            slot-removable = <1>,<1>,<1>;

            interrupts-extended = <&ms_main_intc GIC_SPI INT_IRQ_FCIE IRQ_TYPE_LEVEL_HIGH>,     // No need to change.
                                 <&ms_main_intc GIC_SPI INT_IRQ_SDIO IRQ_TYPE_LEVEL_HIGH>,      // No need to change.
                                 <&ms_main_intc GIC_SPI INT_FIQ_SD_CDZ IRQ_TYPE_LEVEL_HIGH>,    // CDZ int for Slot 0, default is for PAD_PM_SD_CDZ
                                 <&ms_gpi_intc 42>,                                             // CDZ int for Slot 1, default is for PAD_SD1_IO6
                                 <&ms_main_intc GIC_SPI INT_FIQ_SD_CDZ IRQ_TYPE_LEVEL_HIGH>;    // CDZ int for Slot 2, None.
            interrupt-names = "mie0_irq", "mie1_irq", "cdz_slot0_irq", "cdz_slot1_irq", "cdz_slot2_irq"; // No need to change.
//            clocks = <&CLK_sd>,<&CLK_sdio>,<&CLK_VOID>; // No need to change.

#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_sd CAMCLK_sdio CAMCLK_VOID>;
#else
            clocks = <&CLK_sd>,<&CLK_sdio>,<&CLK_VOID>; // No need to change.
#endif
            status = "ok";
        };

        aesdma {
            compatible = "sstar,infinity-aes";
            interrupts=<GIC_SPI INT_IRQ_WADR_ERROR IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_aesdma>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_aesdma >;
#else
            clocks = <&CLK_aesdma>;
#endif
            status = "ok";
        };

        bdma0 {
            compatible = "sstar,bdma0";
            interrupts=<GIC_SPI INT_IRQ_BDMA_0 IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_bdma>,<&CLK_miu_bdma>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_bdma CAMCLK_miu_bdma >;
#else
            clocks = <&CLK_bdma>,<&CLK_miu_bdma>;
#endif
            status = "disabled";
        };

        bdma1 {
            compatible = "sstar,bdma1";
            interrupts=<GIC_SPI INT_IRQ_BDMA_1 IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_bdma>,<&CLK_miu_bdma>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_bdma CAMCLK_miu_bdma >;
#else
            clocks = <&CLK_bdma>,<&CLK_miu_bdma>;
#endif
            status = "disabled";
        };

        bdma2 {
            compatible = "sstar,bdma2";
            interrupts=<GIC_SPI INT_IRQ_BDMA_2 IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_bdma>,<&CLK_miu_bdma>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_bdma CAMCLK_miu_bdma >;
#else
            clocks = <&CLK_bdma>,<&CLK_miu_bdma>;
#endif
            status = "disabled";
        };

        bdma3 {
            compatible = "sstar,bdma3";
            interrupts=<GIC_SPI INT_IRQ_BDMA_3 IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_bdma>,<&CLK_miu_bdma>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_bdma CAMCLK_miu_bdma >;
#else
            clocks = <&CLK_bdma>,<&CLK_miu_bdma>;
#endif
            status = "disabled";
        };

        movdma {
            compatible = "sstar,movdma";
            interrupts=<GIC_SPI INT_IRQ_MOVEDMA IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_miu>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_miu >;
#else
            clocks = <&CLK_miu>;
#endif
            status = "disabled";
        };

        rtc {
            compatible = "sstar,infinity-rtc";
            reg = <0x1F002400 0x40>;
            interrupts=<GIC_SPI INT_IRQ_RTC IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_rtc>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_rtc >;
#else
            clocks = <&CLK_rtc>;
#endif
            status = "ok";
        };

        rtcpwc {
            compatible = "sstar,infinity-rtcpwc";
            reg = <0x1F006800 0x200>;
            interrupts=<GIC_SPI INT_IRQ_RTC IRQ_TYPE_LEVEL_HIGH>; //need to check
//            clocks = <&CLK_rtc>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_rtc >;
#else
            clocks = <&CLK_rtc>;
#endif
#if 0
                tm_sec; /*秒 - 取值區間為[0, 59]*/  
                tm_min; /*分 - 取值區間為[0, 59]*/  
                tm_hour; /*時 - 取值區間為[0, 23]*/  
                tm_mday; /*日 - 取值區間為[1, 31]*/  
                tm_mon; /*月份 - 取值區間為[0, 11]*/  
                tm_year; /*年份 - 其值為1900年至今年數*/  
                tm_wday; /*星期 - 取值區間[0, 6]，0代表星期天，1代表星期1，以此類推*/  
                tm_yday; /*從每年的1月1日開始的天數-取值區間為[0, 365]，0代表1月1日*/  
            default_date = <0 0 0 5 10 83 6 0>;
#endif
            status = "disabled";
        };

        cpufreq {
            compatible = "sstar,infinity-cpufreq";
#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_cpupll_clk >;
#endif
            status = "ok";
        };

        watchdog: watchdog {
            compatible = "sstar,infinity-wdt";
            reg = <0x1F006000 0x40>;
            status = "ok";
        };

        sar: sar {
            compatible = "sstar,infinity-sar";
            reg = <0x1F002800 0x200>;
            status = "ok";
        };

        ircut {
            compatible = "sstar,infinity-ircut";
            ircut-gpio-num = <PAD_PM_IRIN>;///PM_GPIO_IRIN
            interrupt-parent = <&ms_pm_intc>;
            interrupts = <INT_PMSLEEP_IRIN>;
            status = "ok";
        };

        pwm {
            compatible = "sstar,infinity-pwm";
            reg = <0x1F003400 0x600>;
            interrupts = <GIC_SPI INT_IRQ_PWM_INT_ALL IRQ_TYPE_LEVEL_HIGH>;
//            clocks = <&CLK_xtali_12m>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_xtali_12m >;
#else
            clocks = <&CLK_xtali_12m>;
#endif
            npwm = <11>;
            pad-ctrl = <PAD_PWM0 PAD_PWM1 PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN>;
            status = "ok";
        };

        gpioi2c {
            compatible = "sstar,infinity-gpioi2c";
            sda-gpio = <PAD_GPIO8>;
            scl-gpio = <PAD_GPIO9>;
            status = "ok";
        };

        miu {
            compatible = "sstar,miu";
            interrupts=<GIC_SPI INT_IRQ_MIU IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

    };
};

#ifndef CONFIG_CAM_CLK
&clks {
    #include <../../../../drivers/sstar/include/infinity6b0/reg_clks.h>
#ifndef __DTS_DUALOS__
	#include "infinity6b0-clks.dtsi"
#else
	#include "infinity6b0-clks_simple.dtsi"
#endif

};
#endif

