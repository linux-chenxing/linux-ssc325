/*
* mercury6-fpga.dtsi- Sigmastar
*
* Copyright (c) [2019~2020] SigmaStar Technology.
*
*
* This software is licensed under the terms of the GNU General Public
* License version 2, as published by the Free Software Foundation, and
* may be copied, distributed, and modified under those terms.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License version 2 for more details.
*
*/

#include <../../../../drivers/sstar/include/mercury6/irqs.h>
#include <../../../../drivers/sstar/include/mercury6/gpio.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <../../../../include/generated/autoconf.h>
#include "skeleton.dtsi"


/ {
    cpus {
        #address-cells = <1>;
        #size-cells = <0>;

        cpu@0 {
            device_type = "cpu";
            compatible = "arm,cortex-a53";
            clocks = <&xtal>;
            reg = <0x0>;
        };
#ifdef CONFIG_SMP
        cpu@1 {
            device_type = "cpu";
            compatible = "arm,cortex-a53";
            clocks = <&xtal>;
            reg = <0x1>;
        };
#endif
    };

    xtal: oscillator {
        compatible = "fixed-clock";
        #clock-cells = <0>;
        clock-frequency = <24000000>;
    };

    aliases {
        console = &uart0;
        serial0 = &uart0;
    };

    soc {
        compatible = "simple-bus";
        interrupt-parent = <&ms_main_intc>;
        #address-cells = <1>;
        #size-cells = <1>;
        ranges;

        gic: gic@16000000 {
            compatible = "arm,gic-v3";               
            #interrupt-cells = <3>;                   
            #address-cells = <1>;
            #size-cells = <1>;
            interrupt-controller;
            interrupt-parent = <&gic>;
            redistributor-stride = <0x0 0x20000>;
            #redistributor-regions = <1>;
            reg = <0x16000000 0x20000>,      
                  <0x16040000 0x20000>;
        };

        ms_main_intc: ms_main_intc {
            compatible = "sstar,main-intc";
            #interrupt-cells = <3>;
            #address-cells = <1>;
            #size-cells = <1>;
            interrupt-parent=<&gic>;
            interrupt-controller;
        };

        ms_pm_intc: ms_pm_intc {
            compatible = "sstar,pm-intc";
            #interrupt-cells = <1>;
            interrupt-parent=<&ms_main_intc>;
            interrupt-controller;
            interrupts = <GIC_SPI INT_IRQ_PM_SLEEP IRQ_TYPE_LEVEL_HIGH>;
        };

        ms_gpi_intc: ms_gpi_intc {
            compatible = "sstar,gpi-intc";
            #interrupt-cells = <1>;
            interrupt-parent=<&ms_main_intc>;
            interrupt-controller;
            
            interrupts = <GIC_SPI INT_IRQ_GPI_OUT IRQ_TYPE_LEVEL_HIGH>;
        };

        arch_timer {
            compatible = "arm,cortex-a53-timer", "arm,armv8-timer";
            interrupt-parent=<&gic>;
            interrupts = <GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
                         <GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
                         <GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
                         <GIC_PPI 10 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>;
            clock-frequency = <24000000>;  /* arch_timer must use clock-frequency*/
        };

        pmu {
            compatible = "arm,cortex-a53-pmu";
            interrupt-parent=<&gic>;
            interrupts = <GIC_SPI 10 IRQ_TYPE_LEVEL_HIGH>,
                         <GIC_SPI 16 IRQ_TYPE_LEVEL_HIGH>,
                         <GIC_SPI 22 IRQ_TYPE_LEVEL_HIGH>,
                         <GIC_SPI 28 IRQ_TYPE_LEVEL_HIGH>;
        };

        clks: clocks{
            #address-cells = <1>;
            #size-cells = <1>;
            ranges;
        };

        venc {
            compatible = "sstar,venc";
            reg = <0x1F345200 0x800>, <0x1F2C5200 0x100>, <0x1F203C00 0x100>, <0x1F207800 0x100>;
            reg-names = "vpu-bit", "venc-brige", "hw-uart0", "hw-uart1";
            interrupts = <GIC_SPI INT_IRQ_MHE IRQ_TYPE_LEVEL_HIGH>;
            interrupt-parent = <&ms_main_intc>;
            interrupt-names = "mhe-irq";
            clocks = <&CLK_vhe>, <&CLK_mfe>, <&CLK_ven_axi>;
            clock-names = "CKG_venc";
            status = "ok";
        };

        isp: isp {
            compatible = "isp";
            io_phy_addr = <0x1f000000>;
            banks = <0x1302>;
            interrupts = <GIC_SPI INT_IRQ_ISP IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&CLK_isp>;
            status = "ok";
            clock-frequency-index = <5>;
        };

        csi: csi {
            compatible = "sstar,csi";
            io_phy_addr = <0x1f000000>;
            banks = <0x120b>,<0x120c>,<0x120d>,<0x1208>,<0x1209>,<0x120a>,<0x1202>,<0x1203>,<0x1204>,<0x1038>;
            interrupts=  <GIC_SPI INT_IRQ_MIPI_CSI2 IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&CLK_csi_mac_lptx_top_i_m00>,<&CLK_csi_mac_top_i_m00>,<&CLK_ns_top_i_m00>,<&CLK_csi_mac_lptx_top_i_m1>,<&CLK_csi_mac_top_i_m1>,<&CLK_ns_top_i_m1>,<&CLK_csi_mac_lptx_top_i_m01>,<&CLK_csi_mac_top_i_m01>,<&CLK_ns_top_i_m01>;
            status = "ok";
            /* Config max lane number */
            csi_sr0_lane_num = <4>;
            csi_sr1_lane_num = <4>;
            csi_sr2_lane_num = <2>;
            /* Config lane selection */
            csi_sr0_lane_select = <1 2 0 3 4>;
            csi_sr1_lane_select = <1 2 0 3 4>;
            csi_sr2_lane_select = <1 0 2>;
            /* Config lane P/N swap */
            csi_sr0_lane_pn_swap = <1 1 1 1 1>;
            csi_sr1_lane_pn_swap = <1 1 1 1 1>;
            csi_sr2_lane_pn_swap = <1 1 1>;
        };

        vif: vif {
            compatible = "sstar,vif";
            status = "ok";
            reg = <0x1F260800 0x600>, <0x0 0x0>, <0x0 0x0>, <0x0 0x0>, <0x0 0x0>, <0x0 0x0>, <0x1F207800 0x200>, <0x1F226600 0x200>, <0x1F207000 0x200>, <0x1F000000 0x400000>, <0x1F203C00 0x200>;
            clocks = <&CLK_sr00_mclk>,<&CLK_sr1_mclk>,<&CLK_sr01_mclk>;
            interrupts = <GIC_SPI INT_IRQ_VIF IRQ_TYPE_LEVEL_HIGH>;
            /* Config sensor 0 pad mux */
            vif_sr0_par_mode = <1>;
            vif_sr0_mipi_mode = <0>;
            vif_sr0_bt656_mode = <1>;
            vif_sr0_mclk_mode = <0>;
            vif_sr0_rst_mode  = <0>;
            vif_sr0_pdn_mode  = <0>;
            vif_sr0_parallel_rst_mode  = <0>;
            vif_sr0_parallel_pdn_mode  = <0>;
            vif_sr0_mipi_rst_mode  = <0>;
            vif_sr0_mipi_pdn_mode  = <0>;
            vif_sr0_hvsync_mode  = <0>; /* Not used in I6E */
            vif_sr0_pck_mode  = <0>; /* Not used in I6E */
            /* Config sensor 1 pad mux */
            vif_sr1_par_mode = <0>;
            vif_sr1_mipi_mode = <0>;
            vif_sr1_bt656_mode = <0>;
            vif_sr1_mclk_mode = <0>;
            vif_sr1_rst_mode  = <0>;
            /* Config sensor 2 pad mux */
            vif_sr2_mipi_mode = <0>; /* MIPI sensor only */
            vif_sr2_mclk_mode = <0>;
            vif_sr2_rst_mode  = <0>;
            /* Config mclk 37.125MHz supported */
            vif_sr0_mclk_37p125 = <1>;
            vif_sr1_mclk_37p125 = <1>;
            vif_sr2_mclk_37p125 = <1>;
        };

        ispalgo: ispalgo {
            compatible = "sstar,ispalgo";
            status = "ok";
        };

        ispmid: ispmid {
            compatible = "sstar,ispmid";
            status = "ok";
        };

        sensorif: sensorif {
            compatible = "sstar,sensorif";
            status = "ok";
            sensorif_grp0_i2c = <1>;
            sensorif_grp1_i2c = <2>;
            sensorif_grp2_i2c = <1>; //ToDo?
        };

        jpe0: jpe@0x1F2c4000 {
            compatible = "sstar,cedric-jpe";
            reg = <0x1F2c4000 0x100>;
            interrupts = <GIC_SPI INT_IRQ_JPE IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&CLK_jpe>;
#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_jpe >;
#endif
            clock-names = "CKG_jpe";
            clk-select = <0>; // 0: 288MHz  1: 216MHz  2: 54MHz  3: 27MHz
            status = "ok";
        };
		
        jpd0: jpd@0x1F2c4400 {
            compatible = "sstar,njpd";
            reg = <0x1F2c4400 0x100>;
            interrupts = <GIC_SPI INT_IRQ_JPD IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&CLK_jpe>; //jpd
            clock-names = "CKG_jpd";
            status = "ok";
        };
        ge0 {
            compatible = "sstar,ge0";
            clocks = <&xtal>; //for timeout tick
            interrupts=<GIC_SPI INT_IRQ_GE IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };
        i2c0@0{
            compatible = "sstar,i2c";
            reg = <0x1F223000 0x200>,<0x1F207800 0x200>,<0x1F207000 0x200>;
                #address-cells = <1>;
                #size-cells = <0>;
            clocks = <&CLK_miic0>;
            i2c-group = <0>;
            status = "ok";
            /*
             * padmux: 1 -> PAD_I2C0_SCL, PAD_I2C0_SDA
             *         2 -> PAD_ETH_LED0, PAD_ETH_LED1
             *         3 -> PAD_SR_IO00, PAD_SR_IO01
             *         4 -> PAD_SR1_IO00, PAD_SR1_IO01
             *         5 -> PAD_GPIO12, PAD_GPIO13
            */
            i2c-padmux = <1>;
            interrupts=<GIC_SPI INT_IRQ_MIIC_0 IRQ_TYPE_LEVEL_HIGH>;
        };

        i2c1@1{
            compatible = "sstar,i2c";
            reg = <0x1F223200 0x200>,<0x1F207800 0x200>,<0x1F207000 0x200>;
                #address-cells = <1>;
                #size-cells = <0>;
            clocks = <&CLK_miic1>;
            i2c-group = <1>;
            /*
             * padmux: 1 -> PAD_SR0_IO18, PAD_SR0_IO19
             *         2 -> PAD_GPIO0, PAD_GPIO1
             *         3 -> PAD_SR0_IO18, PAD_SR0_IO19
            */
            i2c-padmux = <1>;
            interrupts=<GIC_SPI INT_IRQ_MIIC_1 IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
//            24c512@54 {
//                compatible = "sstar,24c512";
//                reg = <0x54>;
//            };
        };

        i2c2@2{
            compatible = "sstar,i2c";
            reg = <0x1F223400 0x200>,<0x1F207800 0x200>,<0x1F207000 0x200>;
                #address-cells = <1>;
                #size-cells = <0>;
            clocks = <&CLK_miic1>;
            i2c-group = <2>;
            /*
             * padmux: 1 -> PAD_SR1_IO18, PAD_SR1_IO19
             *         2 -> PAD_PWM0, PAD_PWM1
             *         3 -> PAD_ETH_LED0, PAD_ETH_LED1
             *         4 -> PAD_PM_I2CM_SCL, PAD_PM_I2CM_SDA
             *         5 -> PAD_PM_GPIO0, PAD_PM_GPIO1
            */
            i2c-padmux = <1>;
            interrupts=<GIC_SPI INT_IRQ_MIIC_2 IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        cmdq0 {
            compatible = "sstar,cmdq0";
            clocks = <&xtal>; //for timeout tick
            interrupts=<GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        cmdq1 {
            compatible = "sstar,cmdq1";
            clocks = <&xtal>; //for timeout tick
            interrupts=<GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        cmdq2 {
            compatible = "sstar,cmdq2";
            clocks = <&xtal>; //for timeout tick
            interrupts=<GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        cmdq3 {
            compatible = "sstar,cmdq3";
            clocks = <&xtal>; //for timeout tick
            interrupts=<GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        ldc: ldc {
            compatible = "sstar,ldc";
            reg = <0x1F287800 0x100>, <0x1F287A00 0x100>;
            interrupts=<GIC_SPI INT_IRQ_LDC_FEYE IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        scl: scl {
            compatible = "sstar,scl";
            status = "ok";
        };

        vpe: vpe {
            compatible = "sigmastar,vpe";
            status = "ok";
            interrupts = <GIC_SPI INT_IRQ_SC_TOP IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_SC1_TOP_INT IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_SC2_TOP_INT IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_CMDQ IRQ_TYPE_LEVEL_HIGH>;
        };

        dla {
            compatible = "sstar,dla";
            interrupts = <GIC_SPI INT_IRQ_DLA_TOP IRQ_TYPE_LEVEL_HIGH>;
            status = "disable";
        };

        pnl: pnl {
            compatible = "sstar,pnl";
            status = "ok";

            //Reg = <0x1F224000 0x200>;
        };

        disp: disp {
            compatible = "sstar,disp";
            status = "ok";
            interrupts = <GIC_SPI INT_IRQ_DISP0 IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_DISP4 IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_DISP1 IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_DISP5 IRQ_TYPE_LEVEL_HIGH>;
            //Reg = <0x1F224000 0x200>;
        };

        hdmitx: hdmitx {
            compatible = "sstar,hdmitx";
            status = "ok";

            //Reg = <0x1F224000 0x200>;
        };

        uart0: uart@1F221000 {
            compatible = "sstar,uart";
            reg = <0x1F221000 0x100>;
            interrupts= <GIC_SPI INT_IRQ_UART_0 IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
            clocks = <&xtal>;
        };

        emmc {
            compatible = "sstar_mci";
            clocks =<&CLK_sd>, <&CLK_ecc>;
            interrupts =  <GIC_SPI INT_IRQ_SD IRQ_TYPE_LEVEL_HIGH>;
            bus-width = <8>;
            status = "ok";
        };

        sdmmc {
            compatible = "sstar,sdmmc";

            slotnum = <1>;
            revcdz = <0>;

            slot-ip-orders = <0>,<1>,<2>;
            slot-pad-orders = <0>,<1>,<2>;
            slot-max-clks = <48000000>,<48000000>,<48000000>;
            slot-intcdzs = <1>,<1>,<1>;
            slot-fakecdzs = <0>,<0>,<0>;
            slot-cdzs-gpios = <PAD_SD0_CDZ>,<0>,<0>;
            slot-pwr-gpios = <PAD_SD0_GPIO0>,<0>,<0>;
            slot-pwr-off-delay = <30>,<30>,<30>;
            slot-pwr-on-delay = <1>,<1>,<1>;
            slot-removable = <1>,<1>,<1>;
            slot-sdio-use = <0>,<0>,<0>;

            interrupts-extended = <&ms_main_intc GIC_SPI INT_IRQ_SD IRQ_TYPE_LEVEL_HIGH>,//was INT_IRQ_SDIO
                                  <&ms_main_intc GIC_SPI INT_IRQ_SDIO IRQ_TYPE_LEVEL_HIGH>,
                                  <&ms_main_intc GIC_SPI INT_FIQ_SD_CDZ_0 IRQ_TYPE_LEVEL_HIGH>,
                                  <&ms_gpi_intc 42>,
                                  <&ms_main_intc GIC_SPI INT_FIQ_SD_CDZ_0 IRQ_TYPE_LEVEL_HIGH>;
            interrupt-names = "mie0_irq", "mie1_irq", "cdz_slot0_irq", "cdz_slot1_irq", "cdz_slot2_irq";
            clocks = <&CLK_sd>,<&CLK_sdio>,<&CLK_sd>,
                     <&CLK_sd>,<&CLK_sdio>,<&CLK_sd>,
                     <&CLK_sd>,<&CLK_sdio>,<&CLK_sd>;
            status = "ok";
        };

        bdma0 {
            compatible = "sstar,bdma0";
            interrupts=<GIC_SPI INT_IRQ_BDMA_0 IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&CLK_bdma>,<&CLK_VOID>;
            status = "ok";
        };

        bdma1 {
            compatible = "sstar,bdma1";
            interrupts=<GIC_SPI INT_IRQ_BDMA_1 IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&CLK_bdma>,<&CLK_VOID>;
            status = "ok";
        };

        bdma2 {
            compatible = "sstar,bdma2";
            interrupts=<GIC_SPI INT_IRQ_BDMA_2 IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&CLK_bdma>,<&CLK_VOID>;
            status = "ok";
        };

        bdma3 {
            compatible = "sstar,bdma3";
            interrupts=<GIC_SPI INT_IRQ_BDMA_3 IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&CLK_bdma>,<&CLK_VOID>;
            status = "ok";
        };

        movdma {
            compatible = "sstar,movdma";
            interrupts=<GIC_SPI INT_IRQ_MOVEDMA IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&CLK_miu>;
            status = "ok";
        };

        gop{
            compatible = "sstar,gop";
            clocks = <&CLK_VOID>,<&CLK_VOID>;
            status = "ok";
        };

        gop1{
            compatible = "sstar,gop1";
            clocks = <&CLK_VOID>,<&CLK_VOID>;
            status = "ok";
        };

        gop2{
            compatible = "sstar,gop2";
            clocks = <&CLK_VOID>,<&CLK_VOID>;
            status = "ok";
        };

        ive0: ive@0x1F2A4000 {
            compatible = "sstar,infinity-ive";
            reg = <0x1F2A4000 0x100>,<0x1F2A4200 0x100>;
            interrupts = <GIC_SPI INT_IRQ_IVE IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&CLK_ive>;
            status = "ok";
        };

        emac0: emac0 {
            compatible = "sstar-emac";
            interrupts = <GIC_SPI INT_IRQ_EMAC IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_FIQ_LAN_ESD IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI INT_IRQ_EMAC_SCATTER IRQ_TYPE_LEVEL_HIGH>;
            // clocks = <&CLK_emac_ahb>,<&CLK_emac_tx>,<&CLK_emac_rx>;
            reg = <0x1F2A2000 0x800>, <0x1F343C00 0x600>, <0x00000000 0x000>;
            pad = <0x1F203C3C 0x0004 0x0004>; // pad selection from 0x0001
            phy-handle = <&phy0>;
            max-speed = <10>;
            mdio_path = <0>; // force internal mdio
            status = "ok";
            mdio-bus {
                phy0: ethernet-phy@0 {
                    // phy-mode = "rmii";
                    phy-mode = "mii";
                };
            };
        };

        pwm {
            compatible = "sstar,infinity-pwm";
            //reg = <0x1F003400 0x200>; /* PM-PWM(BK:x1A) */
            //npwm = <1>;
            reg = <0x1F203200 0x400>; /* NonPM-PWM(BK:x1019 and x101A) */
            npwm = <11>;
            clocks = <&CLK_pwm>;
            interrupts=<GIC_SPI INT_IRQ_PWM IRQ_TYPE_LEVEL_HIGH>; //Only4i6e; Others, pls check hold0 int supporting.
            pad-ctrl = <PAD_GPIO8 PAD_GPIO9 PAD_GPIO10 PAD_GPIO11 PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN>;
            status = "ok";
        };

        miu {
            compatible = "sstar,miu";
            interrupts=<GIC_SPI INT_IRQ_MIU IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };

        mmu {
            compatible = "sstar,mmu";
            interrupts=<GIC_SPI INT_IRQ_MMU IRQ_TYPE_LEVEL_HIGH>;
            status = "ok";
        };
    };
};

&clks {
    #include <../../../../drivers/sstar/include/mercury6/reg_clks.h>
    #include "mercury6-clks.dtsi"
};
