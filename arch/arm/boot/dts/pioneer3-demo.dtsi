/*
* pioneer3.dtsi- Sigmastar
*
* Copyright (c) [2019~2020] SigmaStar Technology.
*
*
* This software is licensed under the terms of the GNU General Public
* License version 2, as published by the Free Software Foundation, and
* may be copied, distributed, and modified under those terms.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License version 2 for more details.
*
*/

#include <../../../../drivers/sstar/include/pioneer3/irqs.h>
#include <../../../../drivers/sstar/include/pioneer3/gpio.h>
#include <../../../../drivers/sstar/include/vcore_defs.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/interrupt-controller/arm-gic.h>
#include "skeleton.dtsi"
#include <../../../../include/generated/autoconf.h>
#ifdef CONFIG_CAM_CLK
#include <../../../../drivers/sstar/include/pioneer3/camclk.h>
#endif

/ {
   /* add demo board customer setting here */
   soc {
        sdmmc {
            compatible = "sstar,sdmmc";

            slotnum = <1>;
            revcdz = <0>;

            slot-ip-orders = <0>,<1>,<2>; // 0:IP_SDIO
            slot-pad-orders = <0>,<1>,<2>; // 0:PAD_SD 1:PAD_GPIO
            slot-max-clks = <48000000>,<48000000>,<48000000>;
            slot-intcdzs = <1>,<1>,<1>;
            slot-fakecdzs = <0>,<0>,<0>;
            slot-cdzs-gpios = <PAD_PM_SD_CDZ>,<0>,<0>;
            slot-pwr-gpios = <PAD_SD_GPIO0>,<0>,<0>; // ssc010a:PAD_TTL0 P2_ssc011a: PAD_GPIO0
            slot-en-pwr-high-valid = <1>,<0>,<0>; //gpio output (1/0), power on.
            slot-pwr-off-delay = <30>,<30>,<30>;
            slot-pwr-on-delay = <1>,<1>,<1>;
            slot-sdio-use = <0>,<0>,<0>;
            slot-removable = <1>,<1>,<1>;

            interrupts-extended = <&ms_main_intc GIC_SPI INT_IRQ_SDIO IRQ_TYPE_LEVEL_HIGH>,     // No need to change.
                                 <&ms_main_intc GIC_SPI INT_IRQ_SDIO IRQ_TYPE_LEVEL_HIGH>,      // No need to change.
                                 <&ms_main_intc GIC_SPI INT_FIQ_SD_CDZ IRQ_TYPE_LEVEL_HIGH>,    // CDZ int for Slot 0, default is for PAD_PM_SD_CDZ
                                 //<&ms_gpi_intc 42>,                                             // CDZ int for Slot 1, None.
                                 <&ms_main_intc GIC_SPI INT_FIQ_SD_CDZ IRQ_TYPE_LEVEL_HIGH>;    // CDZ int for Slot 2, None.
            interrupt-names = "mie0_irq", "mie1_irq", "cdz_slot0_irq", "cdz_slot1_irq", "cdz_slot2_irq"; // No need to change.
            clocks = <&CLK_sdio>,<&CLK_VOID>,<&CLK_VOID>; // No need to change.

#ifdef CONFIG_CAM_CLK
            camclk = <CAMCLK_sdio CAMCLK_VOID CAMCLK_VOID>;
#endif
            status = "ok";
        };

        i2c0@0{
            compatible = "sstar,i2c";
            reg = <0x1F223000 0x200>,<0x1F207800 0x200>,<0x1F207000 0x200>;
                #address-cells = <1>;
                #size-cells = <0>;
            clocks = <&CLK_miic0>;
            i2c-group = <0>;
            status = "ok";
            /*
             * padmux: 1 -> PAD_I2C0_SCL, PAD_I2C0_SDA
             *         2 -> PAD_PWM0,     PAD_PWM1
             *         3 -> PAD_SR_IO00,  PAD_SR_IO01
             *         4 -> PAD_SR_IO04,  PAD_SR_IO05
             *         5 -> PAD_SR_IO06,  PAD_SR_IO07
             *         6 -> PAD_SR_IO08,  PAD_SR_IO011
             *         7 -> PAD_SR_IO014, PAD_SR_IO015
             *         8 -> PAD_TTL8,     PAD_TTL11
             *         9 -> PAD_TTL18,    PAD_TTL19
             *         10 -> PAD_KEY6,    PAD_KEY7
             *         11 -> PAD_KEY12,   PAD_KEY13
             *         12 -> PAD_GPIO1,   PAD_GPIO2
            */
            i2c-padmux = <12>;
        };

        i2c1@1{
            compatible = "sstar,i2c";
            reg = <0x1F223200 0x200>,<0x1F207800 0x200>,<0x1F207000 0x200>;
                #address-cells = <1>;
                #size-cells = <0>;
            clocks = <&CLK_miic1>;
            i2c-group = <1>;
            /*
             * padmux: 1 -> PAD_I2C1_SCL, PAD_I2C1_SDA
             *         2 -> PAD_PWM0, PAD_PWM1
             *         3 -> PAD_SR_IO00, PAD_SR_IO01
             *         8 -> PAD_KEY8 PAD_KEY9 
            */
            i2c-padmux = <8>;
            status = "ok";
            goodix_gt911@5D{
                compatible = "goodix,gt911";
                reg = <0x5D>;
                goodix_rst = <PAD_KEY11>;
                goodix_int = <PAD_KEY10>;
                interrupts-extended = <&ms_gpi_intc INT_GPI_FIQ_PAD_KEY10>;
                interrupt-names = "goodix_int";
            };
        };

        sar: sar {
            compatible = "sstar,infinity-sar";
            reg = <0x1F002800 0x200>;
            clocks = <&CLK_sar>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_sar >;
#endif
            status = "ok";
        };

        pwm {
            compatible = "sstar,infinity-pwm";
            reg = <0x1F003400 0x600>;
            clocks = <&CLK_xtali_12m>;
#ifdef CONFIG_CAM_CLK
      camclk = <CAMCLK_xtali_12m >;
#endif
            npwm = <4>;
            /*set in padmux.dtsi*/
            pad-ctrl = <PAD_SR_IO08 PAD_UNKNOWN PAD_UNKNOWN PAD_UNKNOWN>;
            status = "ok";  // no available pads
        };
    };


};


